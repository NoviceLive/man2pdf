'\" t -*- coding: UTF-8 -*-
.\"
.\" Copyright (C) 2014 Marko Myllynen <myllynen@redhat.com>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH ICONVCONFIG 8 2014-07-08 "GNU" "Linux System Administration"
.SH NAME
iconvconfig \- create iconv module configuration cache
.SH SYNOPSIS
.B iconvconfig
.RI [ options ]
.RI [ directory ]...
.SH DESCRIPTION
The
.BR iconv (3)
function internally uses
.I gconv
modules to convert to and from a character set.
A configuration file is used to determine the needed modules
for a conversion.
Loading and parsing such a configuration file would slow down
programs that use
.BR iconv (3),
so a caching mechanism is employed.

The
.B iconvconfig
program reads iconv module configuration files and writes
a fast-loading gconv module configuration cache file.
In addition to the system provided gconv modules, the user can specify
custom gconv module directories with the environment variable
.BR GCONV_PATH .
However, iconv module configuration caching is used only when
the environment variable
.BR GCONV_PATH
is not set.
.SH OPTIONS
.TP
.B "\-\-nostdlib"
Do not search the system default gconv directory,
only the directories provided on the command line.
.TP
.BI \-o " outputfile" ", \-\-output=" outputfile
Use
.I outputfile
for output instead of the system default cache location.
.TP
.BI \-\-prefix= pathname
Set the prefix to be prepended to the system pathnames.
See FILES, below.
By default, the prefix is empty.
Setting the prefix to
.IR foo ,
the gconv module configuration would be read from
.IR foo/usr/lib/gconv/gconv-modules
and the cache would be written to
.IR foo/usr/lib/gconv/gconv-modules.cache .
.TP
.BR \-? ", " \-\-help
Print a usage summary and exit.
.TP
.B "\-\-usage"
Print a short usage summary and exit.
.TP
.BR \-V ", " \-\-version
Print the version number, license, and disclaimer of warranty for
.BR iconv .
.SH EXIT STATUS
Zero on success, non-zero on errors.
.SH FILES
.TP
.I /usr/lib/gconv
Usual default gconv module path.
.TP
.I /usr/lib/gconv/gconv-modules
Usual system default gconv module configuration file.
.TP
.I /usr/lib/gconv/gconv-modules.cache
Usual system gconv module configuration cache.
.SH SEE ALSO
.BR iconv (1),
.BR iconv (3)
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" Copyright (c) 1993 Michael Haardt (michael@moria.de),
.\"         Fri Apr  2 11:32:09 MET DST 1993
.\" and Copyright (C) 2007 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Modified Sat Jul 24 17:35:48 1993 by Rik Faith (faith@cs.unc.edu)
.\" 2007-10-23 mtk: minor rewrites, and added paragraph on exit status
.\"
.TH INTRO 8 2007-10-23 "Linux" "Linux Programmer's Manual"
.SH NAME
intro \- introduction to administration and privileged commands
.SH DESCRIPTION
Section 8 of the manual describes commands
which either can be or are used only by the superuser,
like system-administration commands, daemons,
and hardware-related commands.

As with the commands described in Section 1, the commands described
in this section terminate with an exit status that indicates
whether the command succeeded or failed.
See
.BR intro (1)
for more information.
.SH NOTES
.SS Authors and copyright conditions
Look at the header of the manual page source for the author(s) and copyright
conditions.
Note that these can be different from page to page!
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" Copyright 1999 SuSE GmbH Nuernberg, Germany
.\" Author: Thorsten Kukuk <kukuk@suse.de>
.\"
.\" %%%LICENSE_START(GPLv2+_SW_3_PARA)
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of the
.\" License, or (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Modified, 6 May 2002, Michael Kerrisk, <mtk.manpages@gmail.com>
.\"   Change listed order of /usr/lib and /lib
.TH LDCONFIG 8 2015-03-29 "GNU" "Linux Programmer's Manual"
.SH NAME
ldconfig \- configure dynamic linker run-time bindings
.SH SYNOPSIS
.B /sbin/ldconfig
[
.B \-nNvXV
]
[
.BR \-f\ conf
]
[
.BR \-C\ cache
]
[
.BR \-r\ root
]
.IR directory \ ...
.PD 0
.PP
.PD
.B /sbin/ldconfig
.B \-l
[
.B \-v
]
.IR library \ ...
.PD 0
.PP
.PD
.B /sbin/ldconfig
.B \-p
.SH DESCRIPTION
.B ldconfig
creates the necessary links and cache to the most recent shared
libraries found in the directories specified on the command line,
in the file
.IR /etc/ld.so.conf ,
and in the trusted directories,
.I /lib
and
.IR /usr/lib
(on some 64-bit architectures such as x86-64,
.I lib
and
.IR /usr/lib
are the trusted directories for 32-bit libraries, while
.I /lib64
and
.IR /usr/lib64
are used for 64-bit libraries).

The cache is used by the run-time linker,
.I ld.so
or
.IR ld-linux.so .
.B ldconfig
checks the header and filenames of the libraries it encounters when
determining which versions should have their links updated.
.PP
.B ldconfig
will attempt to deduce the type of ELF libs (i.e., libc5 or libc6/glibc)
based on what C libs, if any, the library was linked against.
.\" The following sentence looks suspect
.\" (perhaps historical cruft) -- MTK, Jul 2005
.\" Therefore, when making dynamic libraries,
.\" it is wise to explicitly link against libc (use \-lc).
.PP
Some existing libs do not contain enough information to allow the deduction of
their type.
Therefore, the
.I /etc/ld.so.conf
file format allows the specification of an expected type.
This is used
.I only
for those ELF libs which we can not work out.
The format
is "dirname=TYPE", where TYPE can be libc4, libc5, or libc6.
(This syntax also works on the command line.)
Spaces are
.I not
allowed.
Also see the
.B \-p
option.
.B ldconfig
should normally be run by the superuser as it may require write
permission on some root owned directories and files.
.SH OPTIONS
.TP
.BR \-c " \fIfmt\fP, " \-\-format=\fIfmt\fP
(Since glibc 2.2)
Cache format to use:
.IR old ,
.IR new ,
or
.IR compat
(default).
.TP
.B \-C cache
Use
.B cache
instead of
.IR /etc/ld.so.cache .
.TP
.B \-f conf
Use
.B conf
instead of
.IR /etc/ld.so.conf .
.\" FIXME glibc 2.7 added -i
.TP
.BR \-i ", " \-\-ignore\-aux\-cache	
(Since glibc 2.7)
.\"             commit 27d9ffda17df4d2388687afd12897774fde39bcc
Ignore auxiliary cache file.
.TP
.B \-l
(Since glibc 2.2)
Library mode.
Manually link individual libraries.
Intended for use by experts only.
.TP
.B \-n
Only process directories specified on the command line.
Don't process the trusted directories,
nor those specified in
.IR /etc/ld.so.conf .
Implies
.BR \-N .
.TP
.B \-N
Don't rebuild the cache.
Unless
.B \-X
is also specified, links are still updated.
.TP
.BR \-p ", " \-\-print\-cache
Print the lists of directories and candidate libraries stored in
the current cache.
.TP
.BI "\-r  " root
Change to and use
.I root
as the root directory.
.TP
.BR \-v ", " \-\-verbose
Verbose mode.
Print current version number, the name of each directory as it
is scanned, and any links that are created.
Overrides quiet mode.
.TP
.BR \-V ", " \-\-version
Print program version.
.TP
.B \-X
Don't update links.
Unless
.B \-N
is also specified, the cache is still rebuilt.
.SH FILES
.PD 0
.TP 20
.I /lib/ld.so
Run-time linker/loader.
.TP 20
.I /etc/ld.so.conf
File containing a list of directories, one per line,
in which to search for libraries.
.\" FIXME Since glibc-2.3.4, "include" directives are supported in ld.so.conf
.\" FIXME Since glibc-2.4, "hwcap" directives are supported in ld.so.conf
.TP 20
.I /etc/ld.so.cache
File containing an ordered list of libraries found in the directories
specified in
.IR /etc/ld.so.conf ,
as well as those found in the trusted directories.
.PD
.SH SEE ALSO
.BR ldd (1),
.BR ld.so (8)
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" %%%LICENSE_START(PUBLIC_DOMAIN)
.\" This is in the public domain
.\" %%%LICENSE_END
.\"
.TH LD.SO 8 2015-05-07 "GNU" "Linux Programmer's Manual"
.SH NAME
ld.so, ld-linux.so* \- dynamic linker/loader
.SH SYNOPSIS
The dynamic linker can be run either indirectly by running some
dynamically linked program or library (in which case no command-line options
to the dynamic linker can be passed and, in the ELF case, the dynamic linker
which is stored in the
.B .interp
section of the program is executed) or directly by running:
.P
.I /lib/ld-linux.so.*
[OPTIONS] [PROGRAM [ARGUMENTS]]
.SH DESCRIPTION
The programs
.B ld.so
and
.B ld-linux.so*
find and load the shared libraries needed by a program, prepare
the program to run, and then run it.
.LP
Linux binaries require dynamic linking (linking at run time)
unless the
.B \-static
option was given to
.BR ld (1)
during compilation.
.LP
The program
.B ld.so
handles a.out binaries, a format used long ago;
.B ld-linux.so*
handles ELF (\fI/lib/ld-linux.so.1\fP for libc5, \fI/lib/ld-linux.so.2\fP
for glibc2), which everybody has been using for years now.
Otherwise, both have the same behavior, and use the same
support files and programs
.BR ldd (1),
.BR ldconfig (8),
and
.IR /etc/ld.so.conf .
.LP
When resolving library dependencies,
the dynamic linker first inspects each dependency
string to see if it contains a slash (this can occur if
a library pathname containing slashes was specified at link time).
If a slash is found, then the dependency string is interpreted as
a (relative or absolute) pathname,
and the library is loaded using that pathname.
.LP
If a library dependency does not contain a slash,
then it is searched for in the following order:
.IP o 3
(ELF only) Using the directories specified in the
DT_RPATH dynamic section attribute
of the binary if present and DT_RUNPATH attribute does not exist.
Use of DT_RPATH is deprecated.
.IP o
Using the environment variable
.BR LD_LIBRARY_PATH .
Except if the executable is a set-user-ID/set-group-ID binary,
in which case it is ignored.
.IP o
(ELF only) Using the directories specified in the
DT_RUNPATH dynamic section attribute
of the binary if present.
.IP o
From the cache file
.IR /etc/ld.so.cache ,
which contains a compiled list of candidate libraries previously found
in the augmented library path.
If, however, the binary was linked with the
.B \-z nodeflib
linker option, libraries in the default library paths are skipped.
Libraries installed in hardware capability directories (see below)
are preferred to other libraries.
.IP o
In the default path
.IR /lib ,
and then
.IR /usr/lib .
(On some 64-bit archiectures, the default spaths for 64-bit libraries are
.IR /lib64 ,
and then
.IR /usr/lib64 .)
If the binary was linked with the
.B \-z nodeflib
linker option, this step is skipped.
.SS Rpath token expansion
.PP
.B ld.so
understands certain strings in an rpath specification (DT_RPATH or DT_RUNPATH); those strings are substituted as follows
.TP
.IR $ORIGIN " (or equivalently " ${ORIGIN} )
This expands to
the directory containing the program or shared library.
Thus, an application located in
.I somedir/app
could be compiled with

    gcc \-Wl,\-rpath,\(aq$ORIGIN/../lib\(aq

so that it finds an associated shared library in
.I somedir/lib
no matter where
.I somedir
is located in the directory hierarchy.
This facilitates the creation of "turn-key" applications that
do not need to be installed into special directories,
but can instead be unpacked into any directory
and still find their own shared libraries.
.TP
.IR $LIB " (or equivalently " ${LIB} )
This expands to
.I lib
or
.I lib64
depending on the architecture
(e.g., on x86-64, it expands to
.IR lib64
and
on x86-32, it expands to
.IR lib ).
.TP
.IR $PLATFORM " (or equivalently " ${PLATFORM} )
This expands to a string corresponding to the processor type
of the host system (e.g., "x86_64").
On some architectures, the Linux kernel doesn't provide a platform
string to the dynamic linker.
The value of this string is taken from the
.BR AT_PLATFORM
value in the auxiliary vector (see
.BR getauxval (3)).
.\" To get an idea of the places that $PLATFORM would match,
.\" look at the output of the following:
.\"
.\"     mkdir /tmp/d
.\"     LD_LIBRARY_PATH=/tmp/d strace -e open /bin/date 2>&1 | grep /tmp/d
.\"
.\" ld.so lets names be abbreviated, so $O will work for $ORIGIN;
.\" Don't do this!!
.SH OPTIONS
.TP
.B \-\-list
List all dependencies and how they are resolved.
.TP
.B \-\-verify
Verify that program is dynamically linked and this dynamic linker can handle
it.
.TP
.B \-\-inhibit-cache
Do not use
.IR /etc/ld.so.cache .
.TP
.BI \-\-library\-path " path"
Use
.I path
instead of
.B LD_LIBRARY_PATH
environment variable setting (see below).
.TP
.BI \-\-inhibit\-rpath " list"
Ignore RPATH and RUNPATH information in object names in
.IR list .
This option is ignored if
.B ld.so
is set-user-ID or set-group-ID.
.TP
.BI \-\-audit " list"
Use objects named in
.I list
as auditors.
.SH ENVIRONMENT
Among the more important environment variables are the following:
.TP
.B LD_ASSUME_KERNEL
(glibc since 2.2.3)
Each shared library can inform the dynamic linker of the minimum kernel ABI
version that it requires.
(This requirement is encoded in an ELF note section that is viewable via
.IR "readelf\ \-n"
as a section labeled
.BR NT_GNU_ABI_TAG .)
At run time,
the dynamic linker determines the ABI version of the running kernel and
will reject loading shared libraries that specify minimum ABI versions
that exceed that ABI version.

.BR LD_ASSUME_KERNEL
can be used to
cause the dynamic linker to assume that it is running on a system with
a different kernel ABI version.
For example, the following command line causes the
dynamic linker to assume it is running on Linux 2.2.5 when loading
the shared libraries required by
.IR myprog :

.in +4n
.nf
$ \fBLD_ASSUME_KERNEL=2.2.5 ./myprog\fP
.fi
.in

On systems that provide multiple versions of a shared library
(in different directories in the search path) that have
different minimum kernel ABI version requirements,
.BR LD_ASSUME_KERNEL
can be used to select the version of the library that is used
(dependent on the directory search order).
Historically, the most common use of the
.BR LD_ASSUME_KERNEL
feature was to manually select the older
LinuxThreads POSIX threads implementation on systems that provided both
LinuxThreads and NPTL
(which latter was typically the default on such systems);
see
.BR pthreads (7).
.TP
.B LD_BIND_NOW
(libc5; glibc since 2.1.1)
If set to a nonempty string,
causes the dynamic linker to resolve all symbols
at program startup instead of deferring function call resolution to the point
when they are first referenced.
This is useful when using a debugger.
.TP
.B LD_LIBRARY_PATH
A colon-separated list of directories in which to search for
ELF libraries at execution-time.
Similar to the
.B PATH
environment variable.
Ignored in set-user-ID and set-group-ID programs.
.TP
.B LD_PRELOAD
A list of additional, user-specified, ELF shared
libraries to be loaded before all others.
The items of the list can be separated by spaces or colons.
This can be used to selectively override functions in other shared libraries.
The libraries are searched for using the rules given under DESCRIPTION.
For set-user-ID/set-group-ID ELF binaries,
preload pathnames containing slashes are ignored,
and libraries in the standard search directories are loaded
only if the set-user-ID mode bit is enabled on the library file.
.TP
.B LD_TRACE_LOADED_OBJECTS
(ELF only)
If set to a nonempty string, causes the program to list its dynamic library
dependencies, as if run by
.BR ldd (1),
instead of running normally.
.LP
Then there are lots of more or less obscure variables,
many obsolete or only for internal use.
.TP
.B LD_AOUT_LIBRARY_PATH
(libc5)
Version of
.B LD_LIBRARY_PATH
for a.out binaries only.
Old versions of ld\-linux.so.1 also supported
.BR LD_ELF_LIBRARY_PATH .
.TP
.B LD_AOUT_PRELOAD
(libc5)
Version of
.B LD_PRELOAD
for a.out binaries only.
Old versions of ld\-linux.so.1 also supported
.BR LD_ELF_PRELOAD .
.TP
.B LD_AUDIT
(glibc since 2.4)
A colon-separated list of user-specified, ELF shared objects
to be loaded before all others in a separate linker namespace
(i.e., one that does not intrude upon the normal symbol bindings that
would occur in the process).
These libraries can be used to audit the operation of the dynamic linker.
.B LD_AUDIT
is ignored for set-user-ID/set-group-ID binaries.

The dynamic linker will notify the audit
libraries at so-called auditing checkpoints\(emfor example,
loading a new library, resolving a symbol,
or calling a symbol from another shared object\(emby
calling an appropriate function within the audit library.
For details, see
.BR rtld-audit (7).
The auditing interface is largely compatible with that provided on Solaris,
as described in its
.IR "Linker and Libraries Guide" ,
in the chapter
.IR "Runtime Linker Auditing Interface" .
.TP
.B LD_BIND_NOT
(glibc since 2.1.95)
Do not update the GOT (global offset table) and PLT (procedure linkage table)
after resolving a symbol.
.TP
.B LD_DEBUG
(glibc since 2.1)
Output verbose debugging information about the dynamic linker.
If set to
.B all
prints all debugging information it has, if set to
.B help
prints a help message about which categories can be specified in this
environment variable.
Since glibc 2.3.4,
.B LD_DEBUG
is ignored for set-user-ID/set-group-ID binaries.
.TP
.B LD_DEBUG_OUTPUT
(glibc since 2.1)
File in which
.B LD_DEBUG
output should be written.
The default is standard error.
.B LD_DEBUG_OUTPUT
is ignored for set-user-ID/set-group-ID binaries.
.TP
.B LD_DYNAMIC_WEAK
(glibc since 2.1.91)
Allow weak symbols to be overridden (reverting to old glibc behavior).
For security reasons, since glibc 2.3.4,
.B LD_DYNAMIC_WEAK
is ignored for set-user-ID/set-group-ID binaries.
.TP
.B LD_HWCAP_MASK
(glibc since 2.1)
Mask for hardware capabilities.
.TP
.B LD_KEEPDIR
(a.out only)(libc5)
Don't ignore the directory in the names of a.out libraries to be loaded.
Use of this option is strongly discouraged.
.TP
.B LD_NOWARN
(a.out only)(libc5)
Suppress warnings about a.out libraries with incompatible minor
version numbers.
.TP
.B LD_ORIGIN_PATH
(glibc since 2.1)
Path where the binary is found (for non-set-user-ID programs).
For security reasons, since glibc 2.4,
.B LD_ORIGIN_PATH
is ignored for set-user-ID/set-group-ID binaries.
.\" Only used if $ORIGIN can't be determined by normal means
.\" (from the origin path saved at load time, or from /proc/self/exe)?
.TP
.B LD_POINTER_GUARD
(glibc since 2.4)
Set to 0 to disable pointer guarding.
Any other value enables pointer guarding, which is also the default.
Pointer guarding is a security mechanism whereby some pointers to code
stored in writable program memory (return addresses saved by
.BR setjmp (3)
or function pointers used by various glibc internals) are mangled
semi-randomly to make it more difficult for an attacker to hijack
the pointers for use in the event of a buffer overrun or
stack-smashing attack.
.TP
.B LD_PROFILE
(glibc since 2.1)
The name of a (single) shared object to be profiled,
specified either as a pathname or a soname.
Profiling output is appended to the file whose name is:
"\fI$LD_PROFILE_OUTPUT\fP/\fI$LD_PROFILE\fP.profile".
.TP
.B LD_PROFILE_OUTPUT
(glibc since 2.1)
Directory where
.B LD_PROFILE
output should be written.
If this variable is not defined, or is defined as an empty string,
then the default is
.IR /var/tmp .
.B LD_PROFILE_OUTPUT
is ignored for set-user-ID and set-group-ID programs,
which always use
.IR /var/profile .
.TP
.B LD_SHOW_AUXV
(glibc since 2.1)
Show auxiliary array passed up from the kernel.
For security reasons, since glibc 2.3.5,
.B LD_SHOW_AUXV
is ignored for set-user-ID/set-group-ID binaries.
.TP
.B LD_TRACE_PRELINKING
(glibc since 2.4)
Trace prelinking of the object whose name is assigned to
this environment variable.
(Use
.BR ldd (1)
to get a list of the objects that might be traced.)
If the object name is not recognized,
.\" (This is what seems to happen, from experimenting)
then all prelinking activity is traced.
.TP
.B LD_USE_LOAD_BIAS
.\" http://sources.redhat.com/ml/libc-hacker/2003-11/msg00127.html
.\" Subject: [PATCH] Support LD_USE_LOAD_BIAS
.\" Jakub Jelinek
By default (i.e., if this variable is not defined),
executables and prelinked
shared objects will honor base addresses of their dependent libraries
and (nonprelinked) position-independent executables (PIEs)
and other shared objects will not honor them.
If
.B LD_USE_LOAD_BIAS
is defined with the value 1, both executables and PIEs
will honor the base addresses.
If
.B LD_USE_LOAD_BIAS
is defined with the value 0,
neither executables nor PIEs will honor the base addresses.
This variable is ignored by set-user-ID and set-group-ID programs.
.TP
.B LD_VERBOSE
(glibc since 2.1)
If set to a nonempty string,
output symbol versioning information about the
program if the
.B LD_TRACE_LOADED_OBJECTS
environment variable has been set.
.TP
.B LD_WARN
(ELF only)(glibc since 2.1.3)
If set to a nonempty string, warn about unresolved symbols.
.TP
.B LDD_ARGV0
(libc5)
.IR argv [0]
to be used by
.BR ldd (1)
when none is present.
.SH FILES
.PD 0
.TP
.I /lib/ld.so
a.out dynamic linker/loader
.TP
.IR /lib/ld\-linux.so. { 1 , 2 }
ELF dynamic linker/loader
.TP
.I /etc/ld.so.cache
File containing a compiled list of directories in which to search for
libraries and an ordered list of candidate libraries.
.TP
.I /etc/ld.so.preload
File containing a whitespace-separated list of ELF shared libraries to
be loaded before the program.
.TP
.B lib*.so*
shared libraries
.PD
.SH NOTES
The
.B ld.so
functionality is available for executables compiled using libc version
4.4.3 or greater.
ELF functionality is available since Linux 1.1.52 and libc5.
.SS Hardware capabilities
Some libraries are compiled using hardware-specific instructions which do
not exist on every CPU.
Such libraries should be installed in directories whose names define the
required hardware capabilities, such as
.IR /usr/lib/sse2/ .
The dynamic linker checks these directories against the hardware of the
machine and selects the most suitable version of a given library.
Hardware capability directories can be cascaded to combine CPU features.
The list of supported hardware capability names depends on the CPU.
The following names are currently recognized:
.TP
.B Alpha
ev4, ev5, ev56, ev6, ev67
.TP
.B MIPS
loongson2e, loongson2f, octeon, octeon2
.TP
.B PowerPC
4xxmac, altivec, arch_2_05, arch_2_06, booke, cellbe, dfp, efpdouble, efpsingle,
fpu, ic_snoop, mmu, notb, pa6t, power4, power5, power5+, power6x, ppc32, ppc601,
ppc64, smt, spe, ucache, vsx
.TP
.B SPARC
flush, muldiv, stbar, swap, ultra3, v9, v9v, v9v2
.TP
.B s390
dfp, eimm, esan3, etf3enh, g5, highgprs, hpage, ldisp, msa, stfle,
z900, z990, z9-109, z10, zarch
.TP
.B x86 (32-bit only)
acpi, apic, clflush, cmov, cx8, dts, fxsr, ht, i386, i486, i586, i686, mca, mmx,
mtrr, pat, pbe, pge, pn, pse36, sep, ss, sse, sse2, tm
.SH SEE ALSO
.BR ld (1),
.BR ldd (1),
.BR pldd (1),
.BR sprof (1),
.BR dlopen (3),
.BR getauxval (3),
.BR rtld-audit (7),
.BR ldconfig (8),
.BR sln (8)
.\" .SH AUTHORS
.\" ld.so: David Engel, Eric Youngdale, Peter MacDonald, Hongjiu Lu, Linus
.\"  Torvalds, Lars Wirzenius and Mitch D'Souza
.\" ld-linux.so: Roland McGrath, Ulrich Drepper and others.
.\"
.\" In the above, (libc5) stands for David Engel's ld.so/ld-linux.so.
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" Copyright 1999 SuSE GmbH Nuernberg, Germany
.\" Author: Thorsten Kukuk <kukuk@suse.de>
.\"
.\" %%%LICENSE_START(GPLv2+_SW_3_PARA)
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of the
.\" License, or (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" 2008-12-05 Petr Baudis <pasky@suse.cz>
.\"	Rewrite the NOTES section to reflect modern reality
.\"
.TH NSCD 8 2015-05-07 "GNU" "Linux Programmer's Manual"
.SH NAME
nscd \- name service cache daemon
.SH DESCRIPTION
Nscd is a daemon that provides a cache for the most common name service
requests.
The default configuration file,
.IR /etc/nscd.conf ,
determines the behavior of the cache daemon.
See
.BR nscd.conf (5).

Nscd provides caching for accesses of the
.BR passwd (5),
.BR group (5),
.BR hosts (5)
.BR service (5)
and
.I netgroup
databases through standard libc interfaces, such as
.BR getpwnam (3),
.BR getpwuid (3),
.BR getgrnam (3),
.BR getgrgid (3),
.BR gethostbyname (3),
and others.

There are two caches for each database:
a positive one for items found, and a negative one
for items not found.
Each cache has a separate TTL (time-to-live)
period for its data.
Note that the shadow file is specifically not cached.
.BR getspnam (3)
calls remain uncached as a result.
.SH OPTIONS
.TP
.B "\-\-help"
will give you a list with all options and what they do.
.SH NOTES
The daemon will try to watch for changes in configuration files
appropriate for each database (e.g.,
.I /etc/passwd
for the
.I passwd
database or
.I /etc/hosts
and
.I /etc/resolv.conf
for the
.I hosts
database), and flush the cache when these are changed.
However, this will happen only after a short delay (unless the
.BR inotify (7)
mechanism is available and glibc 2.9 or later is available),
and this auto-detection does not cover configuration files
required by nonstandard NSS modules, if any are specified in
.IR /etc/nsswitch.conf .
In that case, you need to run the following command
after changing the configuration file of the database so that
.B nscd
invalidates its cache:

    $ \fBnscd -i\fP \fI<database>\fP
.SH SEE ALSO
.BR nscd.conf (5),
.BR nsswitch.conf (5)
.\" .SH AUTHOR
.\" .B nscd
.\" was written by Thorsten Kukuk and Ulrich Drepper.
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" Copyright (c) 2013 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH SLN 8 2013-02-10 "GNU" "Linux Programmer's Manual"
.SH NAME
sln \- create symbolic links
.SH SYNOPSIS
.BI sln " source dest"
.br
.BI sln " filelist"
.SH DESCRIPTION
The
.B sln
program creates symbolic links.
Unlike the
.BR ln (1)
program, it is statically linked.
This means that if for some reason the dynamic linker is not working,
.BR sln
can be used to make symbolic links to dynamic libraries.

The command line has two forms.
In the first form, it creates
.I dest
as a new symbolic link to
.IR source .

In the second form,
.I filelist
is a list of space-separated pathname pairs,
and the effect is as if
.BR sln
was executed once for each line of the file,
with the two pathnames as the arguments.

The
.B sln
program supports no command-line options.
.SH SEE ALSO
.BR ln (1),
.BR ldconfig (8),
.BR ld.so (8)
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" %%%LICENSE_START(PUBLIC_DOMAIN)
.\" This page is in the public domain
.\" %%%LICENSE_END
.\"
.TH TZSELECT 8 2007-05-18 "" "Linux System Administration"
.SH NAME
tzselect \- select a timezone
.SH SYNOPSIS
.B tzselect
.SH DESCRIPTION
The
.B tzselect
program asks the user for information about the current location,
and outputs the resulting timezone description to standard output.
The output is suitable as a value for the
.B TZ
environment variable.
.PP
All interaction with the user is done via standard input and standard error.
.SH EXIT STATUS
The exit status is zero if a timezone was successfully obtained
from the user, nonzero otherwise.
.SH ENVIRONMENT
.TP
.B AWK
Name of a Posix-compliant
.I awk
program (default:
.BR awk ).
.TP
.B TZDIR
Name of the directory containing timezone data files (default:
.IR /usr/share/zoneinfo ).
.\" or perhaps /usr/local/etc/zoneinfo in some older systems.
.SH FILES
.TP
\fBTZDIR\fP\fI/iso3166.tab\fP
Table of ISO 3166 2-letter country codes and country names.
.TP
\fBTZDIR\fP\fI/zone.tab\fP
Table of country codes, latitude and longitude, TZ values, and
descriptive comments.
.TP
\fBTZDIR\fP\fI/\fP\fITZ\fP
Time zone data file for timezone
.IR TZ .
.SH SEE ALSO
.BR tzfile (5),
.BR zdump (8),
.BR zic (8)
.\" @(#)tzselect.8	1.3
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" %%%LICENSE_START(PUBLIC_DOMAIN)
.\" This page is in the public domain
.\" %%%LICENSE_END
.\"
.TH ZDUMP 8 2013-02-12 "" "Linux System Administration"
.SH NAME
zdump \- timezone dumper
.SH SYNOPSIS
.B zdump
[
.B \-\-version
] [
.B \-\-help
] [
.B \-v
] [
.B \-c
.RI [ loyear \fB,\fR] hiyear
] [
.IR zonename " ... ]"
.SH DESCRIPTION
.I Zdump
prints the current time in each
.I zonename
named on the command line.
.PP
These options are available:
.TP
.B \-\-version
Output version information and exit.
.TP
.B \-\-help
Output short usage and exit.
.TP
.B \-v
For each
.I zonename
on the command line,
print the time at the lowest possible time value,
the time one day after the lowest possible time value,
the times both one second before and exactly at
each detected time discontinuity,
the time at one day less than the highest possible time value,
and the time at the highest possible time value.
Each line ends with
.B isdst=1
if the given time is Daylight Saving Time or
.B isdst=0
otherwise.
.TP
.BI "\-c " \fR[\fIloyear , \fR]\fIhiyear
Cut off the verbose output near the start of the given year(s).
The output still includes the lowest possible time value
and one day after it, and the highest possible time value
preceded by the time value one day before it.
.SH SEE ALSO
.BR tzfile (5),
.BR zic (8)
.\" @(#)zdump.8	7.3
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
.\" %%%LICENSE_START(PUBLIC_DOMAIN)
.\" This page is in the public domain
.\" %%%LICENSE_END
.\"
.TH ZIC 8 2010-02-25 "" "Linux System Administration"
.SH NAME
zic \- timezone compiler
.SH SYNOPSIS
.B zic
[
.B \-v
] [
.B \-d
.I directory
] [
.B \-l
.I localtime
] [
.B \-p
.I posixrules
] [
.B \-L
.I leapsecondfilename
] [
.B \-s
] [
.B \-y
.I command
] [
.I filename
\&... ]
.SH DESCRIPTION
.if t .ds lq ``
.if t .ds rq ''
.if n .ds lq \&"\"
.if n .ds rq \&"\"
.de q
\\$3\*(lq\\$1\*(rq\\$2
..
.I Zic
reads text from the file(s) named on the command line
and creates the time conversion information files specified in this input.
If a
.I filename
is
.BR \- ,
the standard input is read.
.PP
These options are available:
.TP
.BI "\-d " directory
Create time conversion information files in the named directory rather than
in the standard directory named below.
.TP
.BI "\-l " timezone
Use the given timezone as local time.
.I Zic
will act as if the input contained a link line of the form
.sp
.ti +.5i
Link	\fItimezone\fP		localtime
.TP
.BI "\-p " timezone
Use the given timezone's rules when handling POSIX-format
timezone environment variables.
.I Zic
will act as if the input contained a link line of the form
.sp
.ti +.5i
Link	\fItimezone\fP		posixrules
.TP
.BI "\-L " leapsecondfilename
Read leap second information from the file with the given name.
If this option is not used,
no leap second information appears in output files.
.TP
.B \-v
Complain if a year that appears in a data file is outside the range
of years representable by
.BR time (2)
values.
.TP
.B \-s
Limit time values stored in output files to values that are the same
whether they're taken to be signed or unsigned.
You can use this option to generate SVVS-compatible files.
.TP
.BI "\-y " command
Use the given
.I command
rather than
.B yearistype
when checking year types (see below).
.PP
Input lines are made up of fields.
Fields are separated from one another by any number of white space characters.
Leading and trailing white space on input lines is ignored.
An unquoted sharp character (#) in the input introduces a comment which extends
to the end of the line the sharp character appears on.
White space characters and sharp characters may be enclosed in double quotes
(") if they're to be used as part of a field.
Any line that is blank (after comment stripping) is ignored.
Nonblank lines are expected to be of one of three types:
rule lines, zone lines, and link lines.
.PP
A rule line has the form
.nf
.ti +.5i
.ta \w'Rule\0\0'u +\w'NAME\0\0'u +\w'FROM\0\0'u +\w'1973\0\0'u +\w'TYPE\0\0'u +\w'Apr\0\0'u +\w'lastSun\0\0'u +\w'2:00\0\0'u +\w'SAVE\0\0'u
.sp
Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
.sp
For example:
.ti +.5i
.sp
Rule	US	1967	1973	\-	Apr	lastSun	2:00	1:00	D
.sp
.fi
The fields that make up a rule line are:
.TP "\w'LETTER/S'u"
.B NAME
Gives the (arbitrary) name of the set of rules this rule is part of.
.TP
.B FROM
Gives the first year in which the rule applies.
Any integer year can be supplied; the Gregorian calendar is assumed.
The word
.I minimum
(or an abbreviation) means the minimum year representable as an integer.
The word
.I maximum
(or an abbreviation) means the maximum year representable as an integer.
Rules can describe times that are not representable as time values,
with the unrepresentable times ignored; this allows rules to be portable
among hosts with differing time value types.
.TP
.B TO
Gives the final year in which the rule applies.
In addition to
.I minimum
and
.I maximum
(as above),
the word
.I only
(or an abbreviation)
may be used to repeat the value of the
.B FROM
field.
.TP
.B TYPE
Gives the type of year in which the rule applies.
If
.B TYPE
is
.BR \- ,
then the rule applies in all years between
.B FROM
and
.B TO
inclusive.
If
.B TYPE
is something else, then
.I zic
executes the command
.ti +.5i
.B yearistype
.I year
.I type
.br
to check the type of a year:
an exit status of zero is taken to mean that the year is of the given type;
an exit status of one is taken to mean that the year is not of the given type.
.TP
.B IN
Names the month in which the rule takes effect.
Month names may be abbreviated.
.TP
.B ON
Gives the day on which the rule takes effect.
Recognized forms include:
.nf
.in +.5i
.sp
.ta \w'Sun<=25\0\0'u
5	the fifth of the month
lastSun	the last Sunday in the month
lastMon	the last Monday in the month
Sun>=8	first Sunday on or after the eighth
Sun<=25	last Sunday on or before the 25th
.fi
.in -.5i
.sp
Names of days of the week may be abbreviated or spelled out in full.
Note that there must be no spaces within the
.B ON
field.
.TP
.B AT
Gives the time of day at which the rule takes effect.
Recognized forms include:
.nf
.in +.5i
.sp
.ta \w'1:28:13\0\0'u
2	time in hours
2:00	time in hours and minutes
15:00	24-hour format time (for times after noon)
1:28:14	time in hours, minutes, and seconds
\-	equivalent to 0
.fi
.in -.5i
.sp
where hour 0 is midnight at the start of the day,
and hour 24 is midnight at the end of the day.
Any of these forms may be followed by the letter
.I w
if the given time is local
.q "wall clock"
time,
.I s
if the given time is local
.q standard
time, or
.I u
(or
.I g
or
.IR z )
if the given time is universal time;
in the absence of an indicator,
wall clock time is assumed.
.TP
.B SAVE
Gives the amount of time to be added to local standard time when the rule is in
effect.
This field has the same format as the
.B AT
field
(although, of course, the
.I w
and
.I s
suffixes are not used).
.TP
.B LETTER/S
Gives the
.q "variable part"
(for example, the
.q S
or
.q D
in
.q EST
or
.q EDT )
of timezone abbreviations to be used when this rule is in effect.
If this field is
.BR \- ,
the variable part is null.
.PP
A zone line has the form
.sp
.nf
.ti +.5i
.ta \w'Zone\0\0'u +\w'Australia/Adelaide\0\0'u +\w'UTCOFF\0\0'u +\w'RULES/SAVE\0\0'u +\w'FORMAT\0\0'u
Zone	NAME	UTCOFF	RULES/SAVE	FORMAT	[UNTIL]
.sp
For example:
.sp
.ti +.5i
Zone	Australia/Adelaide	9:30	Aus	CST	1971 Oct 31 2:00
.sp
.fi
The fields that make up a zone line are:
.TP "\w'UTCOFF'u"
.B NAME
The name of the timezone.
This is the name used in creating the time conversion information file for the
zone.
.TP
.B UTCOFF
The amount of time to add to UTC to get standard time in this zone.
This field has the same format as the
.B AT
and
.B SAVE
fields of rule lines;
begin the field with a minus sign if time must be subtracted from UTC.
.TP
.B RULES/SAVE
The name of the rule(s) that apply in the timezone or,
alternately, an amount of time to add to local standard time.
If this field is
.BR \- ,
then standard time always applies in the timezone.
.TP
.B FORMAT
The format for timezone abbreviations in this timezone.
The pair of characters
.B %s
is used to show where the
.q "variable part"
of the timezone abbreviation goes.
Alternately,
a slash (/)
separates standard and daylight abbreviations.
.TP
.B UNTIL
The time at which the UTC offset or the rule(s) change for a location.
It is specified as a year, a month, a day, and a time of day.
If this is specified,
the timezone information is generated from the given UTC offset
and rule change until the time specified.
The month, day, and time of day have the same format as the IN, ON, and AT
columns of a rule; trailing columns can be omitted, and default to the
earliest possible value for the missing columns.
.IP
The next line must be a
.q continuation
line; this has the same form as a zone line except that the
string
.q Zone
and the name are omitted, as the continuation line will
place information starting at the time specified as the
.B UNTIL
field in the previous line in the file used by the previous line.
Continuation lines may contain an
.B UNTIL
field, just as zone lines do, indicating that the next line is a further
continuation.
.PP
A link line has the form
.sp
.nf
.ti +.5i
.ta \w'Link\0\0'u +\w'Europe/Istanbul\0\0'u
Link	LINK-FROM	LINK-TO
.sp
For example:
.sp
.ti +.5i
Link	Europe/Istanbul	Asia/Istanbul
.sp
.fi
The
.B LINK-FROM
field should appear as the
.B NAME
field in some zone line;
the
.B LINK-TO
field is used as an alternate name for that zone.
.PP
Except for continuation lines,
lines may appear in any order in the input.
.PP
Lines in the file that describes leap seconds have the following form:
.nf
.ti +.5i
.ta \w'Leap\0\0'u +\w'YEAR\0\0'u +\w'MONTH\0\0'u +\w'DAY\0\0'u +\w'HH:MM:SS\0\0'u +\w'CORR\0\0'u
.sp
Leap	YEAR	MONTH	DAY	HH:MM:SS	CORR	R/S
.sp
For example:
.ti +.5i
.sp
Leap	1974	Dec	31	23:59:60	+	S
.sp
.fi
The
.BR YEAR ,
.BR MONTH ,
.BR DAY ,
and
.B HH:MM:SS
fields tell when the leap second happened.
The
.B CORR
field
should be
.q +
if a second was added
or
.q -
if a second was skipped.
.\" There's no need to document the following, since it's impossible for more
.\" than one leap second to be inserted or deleted at a time.
.\" The C Standard is in error in suggesting the possibility.
.\" See Terry J Quinn, The BIPM and the accurate measure of time,
.\" Proc IEEE 79, 7 (July 1991), 894-905.
.\"	or
.\"	.q ++
.\"	if two seconds were added
.\"	or
.\"	.q --
.\"	if two seconds were skipped.
The
.B R/S
field
should be (an abbreviation of)
.q Stationary
if the leap second time given by the other fields should be interpreted as UTC
or
(an abbreviation of)
.q Rolling
if the leap second time given by the other fields should be interpreted as
local wall clock time.
.SH FILES
.TP
.I /usr/local/etc/zoneinfo
Standard directory used for created files.
.SH NOTES
For areas with more than two types of local time,
you may need to use local standard time in the
.B AT
field of the earliest transition time's rule to ensure that
the earliest transition time recorded in the compiled file is correct.
.SH SEE ALSO
.BR tzfile (5),
.BR zdump (8)
.\" @(#)zic.8	7.19
.SH COLOPHON
This page is part of release 4.00 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
